kind: List
apiVersion: v1
items:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: app

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: app-docker
  spec:
    resources:
      limits:
        cpu: "500m" 
        memory: "712Mi"
    strategy:
      type: Docker
    source:
      type: Docker
      dockerfile: |-
        FROM openjdk:11.0.1-jre-slim-sid
        COPY umsl-0.0.1-SNAPSHOT.jar /umsl.jar
        CMD ["java", "-jar", "/umsl.jar"]
      binary:
        asFile: umsl-0.0.1-SNAPSHOT.jar
    output:
      to:
        kind: ImageStreamTag
        name: app:latest

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: app
  spec:
    source:
      git: 
        uri: https://github.com/drimailorr/emirates.git
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy: 
        jenkinsfilePath: Jenkinsfile
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: app
    name: app
  spec:
    replicas: 1
    selector:
      app: app
      deploymentconfig: app
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: app
          deploymentconfig: app
      spec:
        containers:
        - image: app:latest
          imagePullPolicy: Always
          name: app
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          livenessProbe:
            httpGet:
              path: /services/UMSL
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /services/UMSL
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - app
        from:
          kind: ImageStreamTag
          name: app:latest
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: app
    name: app
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: app
      deploymentconfig: app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Route
  metadata:
    name: app
    labels:
      app: app
  spec:
    to:
      kind: Service
      name: app
      weight: 100
    port:
      targetPort: 8081-tcp
    wildcardPolicy: None
